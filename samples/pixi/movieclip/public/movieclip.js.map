{"version":3,"sources":["../movieclip.fsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oCAkBe,iCAlBf;AAAA,kCAoBc,+BApBd;AAqBA;AArBA,8BAwBY,qBAxBZ;;AA2BE;AAAA,iCAAkD;AAAA;AAAO,KAAzD;AAEA;AAAsB;;AAIlB;AAAA;;AACJ,kCACE;AAAA,OACG;AAAA;AAAqB,OADxB,0BAA0B,yDAAR;AAAA;AAAA,SAAuC,KAAvC,CAAlB;AACwB;;AAC1B,kCACM;AAAY;AAChB,6BAAwB,mBAAxB;AACA,6BAAwB,mBAAxB;AACA;AACA;AACA,2BAAsB,uBAAtB;AACA,0BAAoB,OAAO,mBAA3B;AACA,4BAAsB,kBAAtB;AACA;AARa;;AASf;AAdqB;;AAgBvB,iEAEwB;AAAA;AAAC,GAFzB","file":"movieclip.js","sourceRoot":"/Users/alfonsogarciacaronunez/Documents/Github/fable-graphics/samples/pixi/movieclip/public","sourcesContent":["(**\n - title: MovieClip sample\n - tagline: Basic sample implemented with fable-pixi\n - app-style: width:800px; margin:20px auto 50px auto;\n - require-paths: `'PIXI':'https://cdnjs.cloudflare.com/ajax/libs/pixi.js/3.0.11/pixi.min'`\n - intro: This is a port from [MovieClip sample](http://pixijs.github.io/examples/#/demos/movieclip-demo.js)\n*)\n\n#r \"../../node_modules/fable-core/Fable.Core.dll\"\n#load \"../../node_modules/fable-import-pixi/Fable.Import.Pixi.fs\"\n\nopen System\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Fable.Import.PIXI\nopen Fable.Import.Browser\nopen Fable.Import.JS\n\nlet renderer = WebGLRenderer( 800., 600. )\n\nlet gameDiv = document.getElementById(\"game\")\ngameDiv.appendChild( renderer.view )\n\n// create the root of the scene graph\nlet stage = Container()\n\nlet rec animate (dt:float) =\n  window.requestAnimationFrame(FrameRequestCallback animate) |> ignore\n  // render the container\n  renderer.render(stage)\n\nlet onLoad resources =\n  // create an array to store the textures\n  let explosionTextures = ResizeArray<Texture>()\n  for i in 0..25 do\n    Texture.fromFrame(sprintf \"Explosion_Sequence_A %i.png\" (i+1))\n    |> explosionTextures.Add\n  for i in 0..49 do\n    let explosion = extras.MovieClip(explosionTextures)\n    explosion.position.x <- Math.random() * 800.\n    explosion.position.y <- Math.random() * 600.\n    explosion.anchor.x <- 0.5\n    explosion.anchor.y <- 0.5\n    explosion.rotation <- Math.random() * Math.PI\n    explosion.scale.set(0.75 + Math.random() * 0.5)\n    explosion.gotoAndPlay(Math.random() * 27.)\n    stage.addChild(explosion) |> ignore\n  animate 0.\n\nGlobals.loader\n  .add(\"spritesheet\",\"./public/assets/mc.json\")\n  .load(Func<_,_,_>(fun _ resources ->\n    onLoad(resources)))\n"]}